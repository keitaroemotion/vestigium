@schema
 | (concat (dt 0 1))
 | httpstatus 6
 | process_time 9
 | method 3
 | appname 4
 | access_from 10
 | api_server 5

#1% = 2min


# todo
#   80% line
#   correlative
#   warning filter = alert (auto-batch)
#   date only (1) => need to concat with 1 and such DSL parsing operation


filtc | filter == '200' httpstatus
mean1 | mean process_time
mean2 | mean process_time (group_by method,appname, api_server)
mean5 | mean process_time (filter httpstatus='200')


getput_mean | mean process_time (dispatch_by method GET PUT )

groupby | groupby process_time
sdev | sdev process_time
median | median process_time
sdev2 | sdev httpstatus
filt |filter > 50 count process_time
filt2|filter > 150 count process_time
# conflit of parenthesis, need mod
filt3 |filter > 50 [date,httpstatus] process_time
filt4 |filter > 50 raw process_time
access_from1 | mode 3 access_from
mode_proc | mode 34 process_time
# count ... just return the number of the filtered data
# (date,httpstatus) ... show the dates and httpstatus of the filtered data.
# raw   ... show raw data of filtered data

=> getput_mean
#, filt3
#=>  mean, sdev, median, sdev2, filt, filt2, access_from1, mode_proc, filtc
